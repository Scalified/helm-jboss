# Override the name of the chart (used in naming resources)
nameOverride: ""

# Override the full name (default is the chart name + release name)
fullnameOverride: ""

# JBoss configuration
jboss:
  # Number of replicas/pods to run (should typically be 1)
  replicaCount: 1

  # JBoss containers configuration
  containers:
    # JBoss container configuration
    jboss:
      image:
        # Docker image repository for JBoss
        repository: scalified/jboss-eap
        # Image tag to use (leave empty to use default from Chart or latest)
        tag: "7.4"
        # Image pull policy (e.g., Always, IfNotPresent, Never)
        pullPolicy: IfNotPresent

      # Environment variables for JBoss container
      env: []

      # Liveness probe determines if the JBoss container is running properly
      # If this probe fails, Kubernetes will restart the container automatically
      # This helps recover from deadlock or crash scenarios where the app is unresponsive
      # Example:
      # livenessProbe:
      #   httpGet:
      #     path: /
      #     port: 8080
      #     scheme: HTTP
      #   initialDelaySeconds: 10
      #   periodSeconds: 20
      #   timeoutSeconds: 2
      #   successThreshold: 1
      #   failureThreshold: 5
      
      # Readiness probe determines if the JBoss container is ready to accept traffic
      # If this probe fails, Kubernetes will stop sending traffic to the container until it passes again
      # This ensures traffic only goes to containers that are fully initialized and capable of handling requests
      # Example:
      # readinessProbe:
      #   httpGet:
      #     path: /
      #     port: 8080
      #     scheme: HTTP
      #   initialDelaySeconds: 15
      #   periodSeconds: 20
      #   timeoutSeconds: 2
      #   successThreshold: 1
      #   failureThreshold: 5

      resources:
        requests:
          # Minimum amount of memory requested for the container
          memory: 1Gi

      # Additional volume mounts for the JBoss container
      # Example:
      # volumeMounts:
      #   - name: jboss
      #     mountPath: /opt/jboss/standalone/deployments
      #     subPath: deployments
      volumeMounts: []

      # Default port for the JBoss HTTP service (repository manager UI and API)
      port: 8080

  # Hostname used for the JBoss pod/container
  hostname: jboss

  # Additional volumes to be mounted into the pod
  # Example:
  # volumes:
  #   - name: jboss
  #     persistentVolumeClaim:
  #       claimName: jboss
  volumes: []

  # Configuration for the Kubernetes Service exposing JBoss
  service:
    # Kubernetes service type (e.g., ClusterIP, NodePort, LoadBalancer)
    type: ClusterIP
    # List of ports to expose via the service
    # Each entry defines a port name, external service port, internal container target port, and protocol
    ports:
      - name: http
        port: 8080
        targetPort: 8080
        protocol: TCP

  # Configuration for Ingress to expose JBoss via HTTP/HTTPS
  ingress:
    # Annotations to customize the behavior of the ingress controller
    # Example:
    # annotations:
    #   nginx.ingress.kubernetes.io/proxy-body-size: "100m"
    #   nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    #   nginx.ingress.kubernetes.io/configuration-snippet: |
    #     more_set_headers "X-Content-Type-Options: nosniff";
    annotations: {}
    # Ingress class name (used to select the Ingress controller, e.g., nginx or traefik)
    className: nginx
    # TLS configuration for the ingress
    # Example:
    # tls:
    #   - hosts:
    #       - jboss.example.com
    #     secretName: jboss-tls
    tls: []
    # List of ingress rules
    # Example:
    # rules:
    #   - host: jboss.example.com
    #     http:
    #       paths:
    #         - path: /
    #           pathType: Prefix
    #           backend:
    #             service:
    #               name: jboss
    #               port:
    #                 number: 8080
    rules: []
